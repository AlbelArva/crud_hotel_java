/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package crud_hotel;

import java.awt.HeadlessException;
import java.sql.Connection; 
import java.sql.ResultSet; 
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksi;

/**
 *
 * @author Albel Arva
 */
public final class formAdminHotel extends javax.swing.JFrame {

    public Statement st;
    public ResultSet rs;
    public DefaultTableModel tabModel;
    Connection cn = koneksi.koneksi();
    
    public formAdminHotel() {
        initComponents();
        judul();
        tampilData("");
        
        buttonHapus.setEnabled(false);
        buttonUpdate.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nama = new javax.swing.JTextField();
        buttonHapus = new javax.swing.JButton();
        noKamar = new javax.swing.JTextField();
        buttonUpdate = new javax.swing.JButton();
        tipeKamar = new javax.swing.JComboBox<>();
        buttonReset = new javax.swing.JButton();
        tglCheckin = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableHotel = new javax.swing.JTable();
        tglCheckout = new javax.swing.JComboBox<>();
        noPelanggan = new javax.swing.JTextField();
        buttonSimpan = new javax.swing.JButton();
        buttonLogout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonHapus.setBackground(new java.awt.Color(204, 0, 204));
        buttonHapus.setText("Hapus");
        buttonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHapusActionPerformed(evt);
            }
        });

        buttonUpdate.setBackground(new java.awt.Color(204, 204, 0));
        buttonUpdate.setText("Update");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });

        tipeKamar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Standard Room", "Superior Room", "Deluxe Room", "Suite Room" }));

        buttonReset.setBackground(new java.awt.Color(51, 0, 255));
        buttonReset.setText("Reset");

        tglCheckin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01/01/23", "02/01/23", "03/01/23", "04/01/23", "05/01/23", "06/01/23", "07/01/23", "08/01/23", "09/01/23", "10/01/23", "11/01/23", "12/01/23", "13/01/23", "14/01/23", "15/01/23", "16/01/23", "17/01/23", "18/01/23", "19/01/23", "20/01/23", "21/01/23", "22/01/23", "23/01/23", "24/01/23", "25/01/23", "26/01/23", "27/01/23", "28/01/23", "29/01/23", "30/01/23", "31/01/23", "01/02/23", "02/02/23", "03/02/23", "04/02/23", "05/02/23", "06/02/23", "07/02/23", "08/02/23", "09/02/23", "10/02/23", "11/02/23", "12/02/23", "13/02/23", "14/02/23", "15/02/23", "16/02/23", "17/02/23", "18/02/23", "19/02/23", "20/02/23", "21/02/23", "22/02/23", "23/02/23", "24/02/23", "25/02/23", "26/02/23", "27/02/23", "28/02/23", "01/03/23", "02/03/23", "03/03/23", "04/03/23", "05/03/23", "06/03/23", "07/03/23", "08/03/23", "09/03/23", "10/03/23", "11/03/23", "12/03/23", "13/03/23", "14/03/23", "15/03/23", "16/03/23", "17/03/23", "18/03/23", "19/03/23", "20/03/23", "21/03/23", "22/03/23", "23/03/23", "24/03/23", "25/03/23", "26/03/23", "27/03/23", "28/03/23", "29/03/23", "30/03/23", "31/03/23", "01/04/23", "02/04/23", "03/04/23", "04/04/23", "05/04/23", "06/04/23", "07/04/23", "08/04/23", "09/04/23", "10/04/23", "11/04/23", "12/04/23", "13/04/23", "14/04/23", "15/04/23", "16/04/23", "17/04/23", "18/04/23", "19/04/23", "20/04/23", "21/04/23", "22/04/23", "23/04/23", "24/04/23", "25/04/23", "26/04/23", "27/04/23", "28/04/23", "29/04/23", "30/04/23", "01/05/23", "02/05/23", "03/05/23", "04/05/23", "05/05/23", "06/05/23", "07/05/23", "08/05/23", "09/05/23", "10/05/23", "11/05/23", "12/05/23", "13/05/23", "14/05/23", "15/05/23", "16/05/23", "17/05/23", "18/05/23", "19/05/23", "20/05/23", "21/05/23", "22/05/23", "23/05/23", "24/05/23", "25/05/23", "26/05/23", "27/05/23", "28/05/23", "29/05/23", "30/05/23", "31/05/23", "01/06/23", "02/06/23", "03/06/23", "04/06/23", "05/06/23", "06/06/23", "07/06/23", "08/06/23", "09/06/23", "10/06/23", "11/06/23", "12/06/23", "13/06/23", "14/06/23", "15/06/23", "16/06/23", "17/06/23", "18/06/23", "19/06/23", "20/06/23", "21/06/23", "22/06/23", "23/06/23", "24/06/23", "25/06/23", "26/06/23", "27/06/23", "28/06/23", "29/06/23", "30/06/23", "01/07/23", "02/07/23", "03/07/23", "04/07/23", "05/07/23", "06/07/23", "07/07/23", "08/07/23", "09/07/23", "10/07/23", "11/07/23", "12/07/23", "13/07/23", "14/07/23", "15/07/23", "16/07/23", "17/07/23", "18/07/23", "19/07/23", "20/07/23", "21/07/23", "22/07/23", "23/07/23", "24/07/23", "25/07/23", "26/07/23", "27/07/23", "28/07/23", "29/07/23", "30/07/23", "31/07/23", "01/08/23", "02/08/23", "03/08/23", "04/08/23", "05/08/23", "06/08/23", "07/08/23", "08/08/23", "09/08/23", "10/08/23", "11/08/23", "12/08/23", "13/08/23", "14/08/23", "15/08/23", "16/08/23", "17/08/23", "18/08/23", "19/08/23", "20/08/23", "21/08/23", "22/08/23", "23/08/23", "24/08/23", "25/08/23", "26/08/23", "27/08/23", "28/08/23", "29/08/23", "30/08/23", "31/08/23", "01/09/23", "02/09/23", "03/09/23", "04/09/23", "05/09/23", "06/09/23", "07/09/23", "08/09/23", "09/09/23", "10/09/23", "11/09/23", "12/09/23", "13/09/23", "14/09/23", "15/09/23", "16/09/23", "17/09/23", "18/09/23", "19/09/23", "20/09/23", "21/09/23", "22/09/23", "23/09/23", "24/09/23", "25/09/23", "26/09/23", "27/09/23", "28/09/23", "29/09/23", "30/09/23", "01/10/23", "02/10/23", "03/10/23", "04/10/23", "05/10/23", "06/10/23", "07/10/23", "08/10/23", "09/10/23", "10/10/23", "11/10/23", "12/10/23", "13/10/23", "14/10/23", "15/10/23", "16/10/23", "17/10/23", "18/10/23", "19/10/23", "20/10/23", "21/10/23", "22/10/23", "23/10/23", "24/10/23", "25/10/23", "26/10/23", "27/10/23", "28/10/23", "29/10/23", "30/10/23", "31/10/23", "01/11/23", "02/11/23", "03/11/23", "04/11/23", "05/11/23", "06/11/23", "07/11/23", "08/11/23", "09/11/23", "10/11/23", "11/11/23", "12/11/23", "13/11/23", "14/11/23", "15/11/23", "16/11/23", "17/11/23", "18/11/23", "19/11/23", "20/11/23", "21/11/23", "22/11/23", "23/11/23", "24/11/23", "25/11/23", "26/11/23", "27/11/23", "28/11/23", "29/11/23", "30/11/23", "01/12/23", "02/12/23", "03/12/23", "04/12/23", "05/12/23", "06/12/23", "07/12/23", "08/12/23", "09/12/23", "10/12/23", "11/12/23", "12/12/23", "13/12/23", "14/12/23", "15/12/23", "16/12/23", "17/12/23", "18/12/23", "19/12/23", "20/12/23", "21/12/23", "22/12/23", "23/12/23", "24/12/23", "25/12/23", "26/12/23", "27/12/23", "28/12/23", "29/12/23", "30/12/23", "31/12/23" }));
        tglCheckin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglCheckinActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Form Admin");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("No.Pelanggan :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Nama              :");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("No.Kamar        :");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Tipe Kamar      :");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Tgl Checkout   :");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Tgl Checkin     :");

        tableHotel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        tableHotel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableHotelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableHotel);

        tglCheckout.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01/01/23", "02/01/23", "03/01/23", "04/01/23", "05/01/23", "06/01/23", "07/01/23", "08/01/23", "09/01/23", "10/01/23", "11/01/23", "12/01/23", "13/01/23", "14/01/23", "15/01/23", "16/01/23", "17/01/23", "18/01/23", "19/01/23", "20/01/23", "21/01/23", "22/01/23", "23/01/23", "24/01/23", "25/01/23", "26/01/23", "27/01/23", "28/01/23", "29/01/23", "30/01/23", "31/01/23", "01/02/23", "02/02/23", "03/02/23", "04/02/23", "05/02/23", "06/02/23", "07/02/23", "08/02/23", "09/02/23", "10/02/23", "11/02/23", "12/02/23", "13/02/23", "14/02/23", "15/02/23", "16/02/23", "17/02/23", "18/02/23", "19/02/23", "20/02/23", "21/02/23", "22/02/23", "23/02/23", "24/02/23", "25/02/23", "26/02/23", "27/02/23", "28/02/23", "01/03/23", "02/03/23", "03/03/23", "04/03/23", "05/03/23", "06/03/23", "07/03/23", "08/03/23", "09/03/23", "10/03/23", "11/03/23", "12/03/23", "13/03/23", "14/03/23", "15/03/23", "16/03/23", "17/03/23", "18/03/23", "19/03/23", "20/03/23", "21/03/23", "22/03/23", "23/03/23", "24/03/23", "25/03/23", "26/03/23", "27/03/23", "28/03/23", "29/03/23", "30/03/23", "31/03/23", "01/04/23", "02/04/23", "03/04/23", "04/04/23", "05/04/23", "06/04/23", "07/04/23", "08/04/23", "09/04/23", "10/04/23", "11/04/23", "12/04/23", "13/04/23", "14/04/23", "15/04/23", "16/04/23", "17/04/23", "18/04/23", "19/04/23", "20/04/23", "21/04/23", "22/04/23", "23/04/23", "24/04/23", "25/04/23", "26/04/23", "27/04/23", "28/04/23", "29/04/23", "30/04/23", "01/05/23", "02/05/23", "03/05/23", "04/05/23", "05/05/23", "06/05/23", "07/05/23", "08/05/23", "09/05/23", "10/05/23", "11/05/23", "12/05/23", "13/05/23", "14/05/23", "15/05/23", "16/05/23", "17/05/23", "18/05/23", "19/05/23", "20/05/23", "21/05/23", "22/05/23", "23/05/23", "24/05/23", "25/05/23", "26/05/23", "27/05/23", "28/05/23", "29/05/23", "30/05/23", "31/05/23", "01/06/23", "02/06/23", "03/06/23", "04/06/23", "05/06/23", "06/06/23", "07/06/23", "08/06/23", "09/06/23", "10/06/23", "11/06/23", "12/06/23", "13/06/23", "14/06/23", "15/06/23", "16/06/23", "17/06/23", "18/06/23", "19/06/23", "20/06/23", "21/06/23", "22/06/23", "23/06/23", "24/06/23", "25/06/23", "26/06/23", "27/06/23", "28/06/23", "29/06/23", "30/06/23", "01/07/23", "02/07/23", "03/07/23", "04/07/23", "05/07/23", "06/07/23", "07/07/23", "08/07/23", "09/07/23", "10/07/23", "11/07/23", "12/07/23", "13/07/23", "14/07/23", "15/07/23", "16/07/23", "17/07/23", "18/07/23", "19/07/23", "20/07/23", "21/07/23", "22/07/23", "23/07/23", "24/07/23", "25/07/23", "26/07/23", "27/07/23", "28/07/23", "29/07/23", "30/07/23", "31/07/23", "01/08/23", "02/08/23", "03/08/23", "04/08/23", "05/08/23", "06/08/23", "07/08/23", "08/08/23", "09/08/23", "10/08/23", "11/08/23", "12/08/23", "13/08/23", "14/08/23", "15/08/23", "16/08/23", "17/08/23", "18/08/23", "19/08/23", "20/08/23", "21/08/23", "22/08/23", "23/08/23", "24/08/23", "25/08/23", "26/08/23", "27/08/23", "28/08/23", "29/08/23", "30/08/23", "31/08/23", "01/09/23", "02/09/23", "03/09/23", "04/09/23", "05/09/23", "06/09/23", "07/09/23", "08/09/23", "09/09/23", "10/09/23", "11/09/23", "12/09/23", "13/09/23", "14/09/23", "15/09/23", "16/09/23", "17/09/23", "18/09/23", "19/09/23", "20/09/23", "21/09/23", "22/09/23", "23/09/23", "24/09/23", "25/09/23", "26/09/23", "27/09/23", "28/09/23", "29/09/23", "30/09/23", "01/10/23", "02/10/23", "03/10/23", "04/10/23", "05/10/23", "06/10/23", "07/10/23", "08/10/23", "09/10/23", "10/10/23", "11/10/23", "12/10/23", "13/10/23", "14/10/23", "15/10/23", "16/10/23", "17/10/23", "18/10/23", "19/10/23", "20/10/23", "21/10/23", "22/10/23", "23/10/23", "24/10/23", "25/10/23", "26/10/23", "27/10/23", "28/10/23", "29/10/23", "30/10/23", "31/10/23", "01/11/23", "02/11/23", "03/11/23", "04/11/23", "05/11/23", "06/11/23", "07/11/23", "08/11/23", "09/11/23", "10/11/23", "11/11/23", "12/11/23", "13/11/23", "14/11/23", "15/11/23", "16/11/23", "17/11/23", "18/11/23", "19/11/23", "20/11/23", "21/11/23", "22/11/23", "23/11/23", "24/11/23", "25/11/23", "26/11/23", "27/11/23", "28/11/23", "29/11/23", "30/11/23", "01/12/23", "02/12/23", "03/12/23", "04/12/23", "05/12/23", "06/12/23", "07/12/23", "08/12/23", "09/12/23", "10/12/23", "11/12/23", "12/12/23", "13/12/23", "14/12/23", "15/12/23", "16/12/23", "17/12/23", "18/12/23", "19/12/23", "20/12/23", "21/12/23", "22/12/23", "23/12/23", "24/12/23", "25/12/23", "26/12/23", "27/12/23", "28/12/23", "29/12/23", "30/12/23", "31/12/23" }));

        noPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noPelangganActionPerformed(evt);
            }
        });

        buttonSimpan.setBackground(new java.awt.Color(0, 204, 51));
        buttonSimpan.setText("Simpan");
        buttonSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSimpanActionPerformed(evt);
            }
        });

        buttonLogout.setBackground(new java.awt.Color(255, 0, 0));
        buttonLogout.setText("Logout");
        buttonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(309, 309, 309)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonSimpan)
                    .addComponent(buttonUpdate))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonReset)
                    .addComponent(buttonHapus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonLogout)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tipeKamar, 0, 164, Short.MAX_VALUE)
                                .addComponent(noKamar)
                                .addComponent(nama)
                                .addComponent(noPelanggan)
                                .addComponent(tglCheckin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(18, 18, 18)
                            .addComponent(tglCheckout, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addContainerGap(583, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonSimpan)
                            .addComponent(buttonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonReset)
                            .addComponent(buttonUpdate)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonLogout)
                        .addGap(21, 21, 21)))
                .addGap(20, 20, 20))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(60, 60, 60)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(noPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(noKamar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(tipeKamar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(tglCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(tglCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(130, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tglCheckinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglCheckinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tglCheckinActionPerformed

    private void noPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noPelangganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noPelangganActionPerformed

    private void buttonSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSimpanActionPerformed
        // TODO add your handling code here:
        try {
            st = cn.createStatement();
            st.executeUpdate("INSERT INTO kamar VALUES ('"+ noPelanggan.getText() + "','"
                    + nama.getText() + "','"
                    + noKamar.getText() +"','"
                    + tipeKamar.getSelectedItem() + "','"
                    + tglCheckin.getSelectedItem() + "','"
                    + tglCheckout.getSelectedItem() +"')");
            
            tampilData("");
            JOptionPane.showMessageDialog(null, "Simpan Berhasil");
            noPelanggan.setText("");
            nama.setText("");
            noKamar.setText("");
            tipeKamar.setSelectedItem("");
            tglCheckin.setSelectedItem("");
            tglCheckout.setSelectedItem("");
        } catch (HeadlessException | SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_buttonSimpanActionPerformed

    private void buttonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHapusActionPerformed
        // TODO add your handling code here:
        try {
            int jawab;
            
            if ((jawab = JOptionPane.showConfirmDialog(null, "Ingin Menghapus Data ?",
                    "konfirmasi", JOptionPane.YES_NO_OPTION)) == 0) {
                st = cn.createStatement();
                st.executeUpdate("DELETE FROM kamar where noPelanggan='"
                + tabModel.getValueAt(tableHotel.getSelectedRow(), 0) + "'");
                tampilData("");
                reset();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_buttonHapusActionPerformed

    private void buttonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLogoutActionPerformed
        // TODO add your handling code here:
        formLogin fl = new formLogin();
        fl.show();
        this.dispose();
    }//GEN-LAST:event_buttonLogoutActionPerformed

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        // TODO add your handling code here:
        try {
            st = cn.createStatement();
            st.executeUpdate("UPDATE kamar set "
            + "noPelanggan='"  + noPelanggan.getText() + "',"
            + "nama='"      + nama.getText() + "',"
            + "noKamar='"   + noKamar.getText() + "',"
            + "tipeKamar='" + tipeKamar.getSelectedItem() + "',"
            + "tglCheckin='" + tglCheckin.getSelectedItem() + "',"
            + "tglCheckout='" + tglCheckout.getSelectedItem() + "' where "+ "noPelanggan='"+ noPelanggan.getText() + "'");
            tampilData("");
            reset();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void tableHotelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableHotelMouseClicked
        // TODO add your handling code here:
        noPelanggan.setText(tableHotel.getValueAt(tableHotel.getSelectedRow(), 0).toString());
        nama.setText(tableHotel.getValueAt(tableHotel.getSelectedRow(), 1).toString());
        noKamar.setText(tableHotel.getValueAt(tableHotel.getSelectedRow(), 2).toString());
        tipeKamar.setSelectedItem(tableHotel.getValueAt(tableHotel.getSelectedRow(), 3).toString());
        tglCheckin.setSelectedItem(tableHotel.getValueAt(tableHotel.getSelectedRow(), 4).toString());
        tglCheckout.setSelectedItem(tableHotel.getValueAt(tableHotel.getSelectedRow(), 5).toString());
        buttonSimpan.setEnabled(false);
        buttonUpdate.setEnabled(true);
        buttonHapus.setEnabled(true);
        noPelanggan.setEnabled(false);
    }//GEN-LAST:event_tableHotelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formAdminHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formAdminHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formAdminHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formAdminHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formAdminHotel().setVisible(true);
            }
        });
    }
    
    public void judul() {
        Object[] judul = {
            "No.Pelanggan", "Nama", "No.Kamar", "Tipe Kamar", "tgl_Checkin","tgl_Checkout"
        };
        tabModel = new DefaultTableModel(null, judul);
        tableHotel.setModel(tabModel);
    }
    
    public void tampilData(String Where) {
        try {
            st = cn.createStatement();
            tabModel.getDataVector().removeAllElements();
            tabModel.fireTableDataChanged();
            rs = st.executeQuery("SELECT * FROM kamar " + Where);
            
            while(rs.next()) {
                Object[] data = {
                    rs.getString("noPelanggan"),
                    rs.getString("nama"),
                    rs.getString("noKamar"),
                    rs.getString("tipeKamar"),
                    rs.getString("tglCheckin"),
                    rs.getString("tglCheckout")    
                };
                
                tabModel.addRow(data);
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    public void reset() {
        noPelanggan.setText("");
        nama.setText("");
        noKamar.setText("");
        tipeKamar.setSelectedItem("");
        tglCheckin.setSelectedItem("");
        tglCheckout.setSelectedItem("");
        buttonSimpan.setEnabled(true);
        noPelanggan.setEnabled(true);
        buttonUpdate.setEnabled(false);
        buttonHapus.setEnabled(false);
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonHapus;
    private javax.swing.JButton buttonLogout;
    private javax.swing.JButton buttonReset;
    private javax.swing.JButton buttonSimpan;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nama;
    private javax.swing.JTextField noKamar;
    private javax.swing.JTextField noPelanggan;
    private javax.swing.JTable tableHotel;
    private javax.swing.JComboBox<String> tglCheckin;
    private javax.swing.JComboBox<String> tglCheckout;
    private javax.swing.JComboBox<String> tipeKamar;
    // End of variables declaration//GEN-END:variables
}
